# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Video(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, url: str=None, titulo: str=None):  # noqa: E501
        """Video - a model defined in Swagger

        :param url: The url of this Video.  # noqa: E501
        :type url: str
        :param titulo: The titulo of this Video.  # noqa: E501
        :type titulo: str
        """
        self.swagger_types = {
            'url': str,
            'titulo': str
        }

        self.attribute_map = {
            'url': 'url',
            'titulo': 'titulo'
        }

        self._url = url
        self._titulo = titulo

    @classmethod
    def from_dict(cls, dikt) -> 'Video':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Video of this Video.  # noqa: E501
        :rtype: Video
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self) -> str:
        """Gets the url of this Video.


        :return: The url of this Video.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this Video.


        :param url: The url of this Video.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")  # noqa: E501

        self._url = url

    @property
    def titulo(self) -> str:
        """Gets the titulo of this Video.


        :return: The titulo of this Video.
        :rtype: str
        """
        return self._titulo

    @titulo.setter
    def titulo(self, titulo: str):
        """Sets the titulo of this Video.


        :param titulo: The titulo of this Video.
        :type titulo: str
        """
        if titulo is None:
            raise ValueError("Invalid value for `titulo`, must not be `None`")  # noqa: E501

        self._titulo = titulo
